里氏替换原则
Liskov Substitution Principle
OO（面向对象）中的继承性的思考和说明
1）继承包含这样一层含义：父类中凡是已经实现好的方法，实际上是在设定规范和契约，虽然它不强制要求所有的子类必须遵循这些契约，（子类可以重写父类方法）
	但是如果子类对这些已经实现的方法任意修改，就会对整个继承体系造成破坏。
2）继承在给程序设计带来便利的同时，也带来了弊端。比如使用继承会给程序带来侵入性，程序的可移植性降低，增加对象间的耦合性，如果一个类被其他的类所
	继承，则当这个类需要修改时，必须考虑到所有的子类，并且父类修改后，所有涉及到子类的功能都有可能产生故障
	

1）里氏替换原则在1988年，由麻省理工学院的一位姓里的女士提出的。
2）如果对每个类型为T1的对象o1，都有类型为T2的对象o2，使得以T1定义的所有程序P在所有的对象o1都代换成o2时，程序P的行为没有发生变化，那么类型T2是类型T1的子类型。
	换句话说，所有引用基类的地方必须能透明地使用其子类的对象。
3）在使用继承时，遵循里氏替换原则，在子类中尽量不要重写父类的方法
4）里氏替换原则告诉我们，继承实际上让两个类耦合性增强了，在适当的情况下，可以通过聚合，组合，依赖 来解决问题。

